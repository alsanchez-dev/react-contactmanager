{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c09e4d85.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) =>{\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact =>\n        contact.id !== action.payload)\n      }\n      case 'ADD_CONTACT':\n        return {\n          ...state,\n          contacts: [action.payload,\n          ...state.contacts]\n        }\n        case 'UPDATE_CONTACT':\n          return {\n            ...state,\n            contacts: state.contacts.map(contact =>\n            contact.id === action.payload.id ? (contact\n            = action.payload) : contact)\n          }\n      default:\n        return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n\n    dispatch: action => this.setState(state =>\n      reducer(state, action))\n  }\n\n  async componentDidMount(){\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    //   .then(response => response.json())\n    //   .then(users => this.setState({\n    //     contacts: users\n    //   }))\n    const res = await axios\n      .get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render(){\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport  { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  }\n\n\n  onDeleteClick = async (id, dispatch)=>{\n    try{\n      await axios\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch(e){\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n\n  }\n\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value =>{\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>{name}{' '}\n\n              <i onClick={()=>\n                  this.setState({ showContactInfo:\n                    !this.state.showContactInfo })\n              }\n              className=\"fas fa-sort-down\"\n              style={\n                {\n                  cursor: 'pointer'\n                }\n              }\n              />\n\n              <i className=\"fas fa-times\" style={\n                {\n                  cursor: 'pointer',\n                  float: 'right',\n                  color: 'red'\n                }\n              }\n              onClick={this.onDeleteClick\n                .bind(this, id, dispatch)}\n              />\n\n            <Link to={`contact/edit/${id}`}>\n              <i className=\"fas fa-pencil-alt\"\n                style={\n                  {\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }\n                }\n              ></i>\n            </Link>\n\n              </h4>\n              {showContactInfo ? <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n              </ul> : null }\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n            <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n            </h1>\n              {contacts.map(contact => (\n                <Contact\n                key={contact.id}\n                contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props)=>{\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm\n    navbar-dark bg-danger mb-3 py-0\" >\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"></i>  Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i>  Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-info\"></i>  About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: 'My App'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\n\nexport default ()=>{\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg',\n      { 'is-invalid': error } )}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div\n        className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\nonSubmit = async (dispatch, e) => {\n  e.preventDefault()\n\n  const {name, email, phone} = this.state;\n\n\n  // Check for errors\n  if(name === ''){\n    this.setState(\n      {\n        errors:{ name: 'Name is required' }\n      }\n    );\n    return;\n  }\n\n  if(email === ''){\n    this.setState(\n      {\n        errors:{ email: 'Email is required' }\n      }\n    );\n    return;\n  }\n\n  if(phone === ''){\n    this.setState(\n      {\n        errors:{ phone: 'Phone is required' }\n      }\n    );\n    return;\n  }\n\n\n  const newContact = {\n    name,\n    email,\n    phone\n  }\n\n  const res = await axios\n    .post('https://jsonplaceholder.typicode.com/users', newContact)\n\n    dispatch({type: 'ADD_CONTACT', payload: res.data})\n\n  // Clear State\n  this.setState({\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  });\n\n  this.props.history.push('/');\n\n}\n\nonChange = e => this.setState({ [e.target.name]:\n  e.target.value });\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n\n    return (\n      <Consumer>\n      {value => {\n        const {dispatch} = value;\n        return(\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                  <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                  <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input type=\"submit\" value=\"Add Contact\"\n                  className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n          </div>\n        )\n      }}\n      </Consumer>\n    )\n\n\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\nasync componentDidMount(){\n  const {id} = this.props.match.params;\n  const res = await axios\n    .get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n}\n\nonSubmit = async (dispatch, e) => {\n  e.preventDefault()\n\n  const {name, email, phone} = this.state;\n\n\n  // Check for errors\n  if(name === ''){\n    this.setState(\n      {\n        errors:{ name: 'Name is required' }\n      }\n    );\n    return;\n  }\n\n  if(email === ''){\n    this.setState(\n      {\n        errors:{ email: 'Email is required' }\n      }\n    );\n    return;\n  }\n\n  if(phone === ''){\n    this.setState(\n      {\n        errors:{ phone: 'Phone is required' }\n      }\n    );\n    return;\n  }\n\n  const updContact ={\n    name,\n    email,\n    phone\n  }\n\n  const { id } = this.props.match.params;\n\n  const res = await axios\n    .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n\n  // Clear State\n  this.setState({\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  });\n\n  this.props.history.push('/');\n\n}\n\nonChange = e => this.setState({ [e.target.name]:\n  e.target.value });\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n\n    return (\n      <Consumer>\n      {value => {\n        const {dispatch} = value;\n        return(\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                  <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                  <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input type=\"submit\" value=\"Update Contact\"\n                  className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n          </div>\n        )\n      }}\n      </Consumer>\n    )\n\n\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nexport default ()=> {\n  return(\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">\n        Sorry, that page does not exist\n      </p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  }\n\n\n  componentDidMount() {\n\n  fetch('https://jsonplaceholder.typicode.com/posts/1')\n    .then(response => response.json())\n    .then(data => this.setState({\n      title: data.title,\n      body: data.body\n    }));\n  }\n\n  // componentWillMount() {\n  //   console.log('Will mount run first');\n  // }\n  //\n  // componentDidUpdate() {\n  //   console.log('Will mount run first');\n  // }\n  //\n  // componentWillReceiveProps(nextProps, nextState){\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return(\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' component={Contacts} />\n            <Route exact path='/contact/add' component={AddContact} />\n            <Route exact path='/contact/edit/:id' component={EditContact} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/test' component={Test} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}